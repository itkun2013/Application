package com.greendao.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.konsung.bean.PatientBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "PATIENT_BEAN".
*/
public class PatientBeanDao extends AbstractDao<PatientBean, Long> {

    public static final String TABLENAME = "PATIENT_BEAN";

    /**
     * Properties of entity PatientBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "id");
        public final static Property Name = new Property(1, String.class, "name", false, "NAME");
        public final static Property Num = new Property(2, String.class, "num", false, "NUM");
        public final static Property IdCard = new Property(3, String.class, "idCard", false, "ID_CARD");
        public final static Property Card = new Property(4, String.class, "card", false, "CARD");
        public final static Property IdByServer = new Property(5, String.class, "idByServer", false, "ID_BY_SERVER");
        public final static Property OrgId = new Property(6, String.class, "orgId", false, "ORG_ID");
        public final static Property Address = new Property(7, String.class, "address", false, "ADDRESS");
        public final static Property Waist = new Property(8, String.class, "waist", false, "WAIST");
        public final static Property Hipline = new Property(9, String.class, "hipline", false, "HIPLINE");
        public final static Property Sex = new Property(10, int.class, "sex", false, "SEX");
        public final static Property Age = new Property(11, int.class, "age", false, "AGE");
        public final static Property Blood = new Property(12, int.class, "blood", false, "BLOOD");
        public final static Property Height = new Property(13, float.class, "height", false, "HEIGHT");
        public final static Property Weight = new Property(14, float.class, "weight", false, "WEIGHT");
        public final static Property Birthday = new Property(15, java.util.Date.class, "birthday", false, "BIRTHDAY");
        public final static Property Phone = new Property(16, String.class, "phone", false, "PHONE");
        public final static Property Remark = new Property(17, String.class, "remark", false, "REMARK");
        public final static Property MemberShipCard = new Property(18, String.class, "memberShipCard", false, "MEMBER_SHIP_CARD");
        public final static Property BmpStr = new Property(19, String.class, "bmpStr", false, "BMP_STR");
        public final static Property HeadBmpStr = new Property(20, String.class, "headBmpStr", false, "HEAD_BMP_STR");
        public final static Property IsSelected = new Property(21, boolean.class, "isSelected", false, "IS_SELECTED");
        public final static Property Company = new Property(22, String.class, "company", false, "COMPANY");
        public final static Property Selfmobile = new Property(23, String.class, "selfmobile", false, "SELFMOBILE");
        public final static Property Contact = new Property(24, String.class, "contact", false, "CONTACT");
        public final static Property Contactmobile = new Property(25, String.class, "contactmobile", false, "CONTACTMOBILE");
        public final static Property Resident = new Property(26, String.class, "resident", false, "RESIDENT");
        public final static Property Nationality = new Property(27, String.class, "nationality", false, "NATIONALITY");
        public final static Property Nationalityname = new Property(28, String.class, "nationalityname", false, "NATIONALITYNAME");
        public final static Property Bloodrh = new Property(29, String.class, "bloodrh", false, "BLOODRH");
        public final static Property Education = new Property(30, String.class, "education", false, "EDUCATION");
        public final static Property Carrer = new Property(31, String.class, "carrer", false, "CARRER");
        public final static Property Marriage = new Property(32, String.class, "marriage", false, "MARRIAGE");
        public final static Property PayType = new Property(33, String.class, "payType", false, "PAY_TYPE");
        public final static Property PayTypeother = new Property(34, String.class, "payTypeother", false, "PAY_TYPEOTHER");
        public final static Property Allergy = new Property(35, String.class, "allergy", false, "ALLERGY");
        public final static Property Allergyname = new Property(36, String.class, "allergyname", false, "ALLERGYNAME");
        public final static Property Expose = new Property(37, String.class, "expose", false, "EXPOSE");
        public final static Property Diseasename = new Property(38, String.class, "diseasename", false, "DISEASENAME");
        public final static Property Diseasename2 = new Property(39, String.class, "diseasename2", false, "DISEASENAME2");
        public final static Property Diseasename3 = new Property(40, String.class, "diseasename3", false, "DISEASENAME3");
        public final static Property Disease = new Property(41, String.class, "disease", false, "DISEASE");
        public final static Property Disease_time = new Property(42, java.util.Date.class, "disease_time", false, "DISEASE_TIME");
        public final static Property Disease2 = new Property(43, String.class, "disease2", false, "DISEASE2");
        public final static Property Disease_time2 = new Property(44, java.util.Date.class, "disease_time2", false, "DISEASE_TIME2");
        public final static Property Disease3 = new Property(45, String.class, "disease3", false, "DISEASE3");
        public final static Property Disease_time3 = new Property(46, java.util.Date.class, "disease_time3", false, "DISEASE_TIME3");
        public final static Property Disease4 = new Property(47, String.class, "disease4", false, "DISEASE4");
        public final static Property Disease_time4 = new Property(48, java.util.Date.class, "disease_time4", false, "DISEASE_TIME4");
        public final static Property Disease5 = new Property(49, String.class, "disease5", false, "DISEASE5");
        public final static Property Disease_time5 = new Property(50, java.util.Date.class, "disease_time5", false, "DISEASE_TIME5");
        public final static Property Disease6 = new Property(51, String.class, "disease6", false, "DISEASE6");
        public final static Property Disease_time6 = new Property(52, java.util.Date.class, "disease_time6", false, "DISEASE_TIME6");
        public final static Property Operation = new Property(53, String.class, "operation", false, "OPERATION");
        public final static Property Operationname = new Property(54, String.class, "operationname", false, "OPERATIONNAME");
        public final static Property Operation_time = new Property(55, java.util.Date.class, "operation_time", false, "OPERATION_TIME");
        public final static Property Operation2 = new Property(56, String.class, "operation2", false, "OPERATION2");
        public final static Property Operationname2 = new Property(57, String.class, "operationname2", false, "OPERATIONNAME2");
        public final static Property Operation_time2 = new Property(58, java.util.Date.class, "operation_time2", false, "OPERATION_TIME2");
        public final static Property Trauma = new Property(59, String.class, "trauma", false, "TRAUMA");
        public final static Property Traumaname = new Property(60, String.class, "traumaname", false, "TRAUMANAME");
        public final static Property Trauma_time = new Property(61, java.util.Date.class, "trauma_time", false, "TRAUMA_TIME");
        public final static Property Trauma2 = new Property(62, String.class, "trauma2", false, "TRAUMA2");
        public final static Property Traumaname2 = new Property(63, String.class, "traumaname2", false, "TRAUMANAME2");
        public final static Property Trauma_time2 = new Property(64, java.util.Date.class, "trauma_time2", false, "TRAUMA_TIME2");
        public final static Property Transfusation = new Property(65, String.class, "transfusation", false, "TRANSFUSATION");
        public final static Property Transfusationname = new Property(66, String.class, "transfusationname", false, "TRANSFUSATIONNAME");
        public final static Property Transfusation_time = new Property(67, java.util.Date.class, "transfusation_time", false, "TRANSFUSATION_TIME");
        public final static Property Transfusation2 = new Property(68, String.class, "transfusation2", false, "TRANSFUSATION2");
        public final static Property Transfusationname2 = new Property(69, String.class, "transfusationname2", false, "TRANSFUSATIONNAME2");
        public final static Property Transfusation_time2 = new Property(70, java.util.Date.class, "transfusation_time2", false, "TRANSFUSATION_TIME2");
        public final static Property Homeother = new Property(71, String.class, "homeother", false, "HOMEOTHER");
        public final static Property Father_dis = new Property(72, String.class, "father_dis", false, "FATHER_DIS");
        public final static Property Father_dis_other = new Property(73, String.class, "father_dis_other", false, "FATHER_DIS_OTHER");
        public final static Property Mother_dis = new Property(74, String.class, "mother_dis", false, "MOTHER_DIS");
        public final static Property Mother_dis_other = new Property(75, String.class, "mother_dis_other", false, "MOTHER_DIS_OTHER");
        public final static Property Brother_dis = new Property(76, String.class, "brother_dis", false, "BROTHER_DIS");
        public final static Property Brother_dis_other = new Property(77, String.class, "brother_dis_other", false, "BROTHER_DIS_OTHER");
        public final static Property Child_dis = new Property(78, String.class, "child_dis", false, "CHILD_DIS");
        public final static Property Child_dis_other = new Property(79, String.class, "child_dis_other", false, "CHILD_DIS_OTHER");
        public final static Property Inherited = new Property(80, String.class, "inherited", false, "INHERITED");
        public final static Property Inheritedname = new Property(81, String.class, "inheritedname", false, "INHERITEDNAME");
        public final static Property Disability = new Property(82, String.class, "disability", false, "DISABILITY");
        public final static Property Disabilityname = new Property(83, String.class, "disabilityname", false, "DISABILITYNAME");
        public final static Property Kitchen_en = new Property(84, String.class, "kitchen_en", false, "KITCHEN_EN");
        public final static Property Fuel_en = new Property(85, String.class, "fuel_en", false, "FUEL_EN");
        public final static Property Water_en = new Property(86, String.class, "water_en", false, "WATER_EN");
        public final static Property Toilet_en = new Property(87, String.class, "toilet_en", false, "TOILET_EN");
        public final static Property Livestock_en = new Property(88, String.class, "livestock_en", false, "LIVESTOCK_EN");
        public final static Property IsUpdata = new Property(89, boolean.class, "isUpdata", false, "IS_UPDATA");
        public final static Property UpdataToSX = new Property(90, boolean.class, "updataToSX", false, "UPDATA_TO_SX");
        public final static Property Patient_type = new Property(91, int.class, "patient_type", false, "PATIENT_TYPE");
        public final static Property SortDate = new Property(92, java.util.Date.class, "sortDate", false, "SORT_DATE");
        public final static Property UploadFlag = new Property(93, String.class, "uploadFlag", false, "UPLOAD_FLAG");
        public final static Property DownloadFlag = new Property(94, String.class, "downloadFlag", false, "DOWNLOAD_FLAG");
        public final static Property UploadResult = new Property(95, String.class, "uploadResult", false, "UPLOAD_RESULT");
        public final static Property DownloadResult = new Property(96, String.class, "downloadResult", false, "DOWNLOAD_RESULT");
    }

    private DaoSession daoSession;


    public PatientBeanDao(DaoConfig config) {
        super(config);
    }
    
    public PatientBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"PATIENT_BEAN\" (" + //
                "\"id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"NAME\" TEXT," + // 1: name
                "\"NUM\" TEXT," + // 2: num
                "\"ID_CARD\" TEXT," + // 3: idCard
                "\"CARD\" TEXT," + // 4: card
                "\"ID_BY_SERVER\" TEXT," + // 5: idByServer
                "\"ORG_ID\" TEXT," + // 6: orgId
                "\"ADDRESS\" TEXT," + // 7: address
                "\"WAIST\" TEXT," + // 8: waist
                "\"HIPLINE\" TEXT," + // 9: hipline
                "\"SEX\" INTEGER NOT NULL ," + // 10: sex
                "\"AGE\" INTEGER NOT NULL ," + // 11: age
                "\"BLOOD\" INTEGER NOT NULL ," + // 12: blood
                "\"HEIGHT\" REAL NOT NULL ," + // 13: height
                "\"WEIGHT\" REAL NOT NULL ," + // 14: weight
                "\"BIRTHDAY\" INTEGER," + // 15: birthday
                "\"PHONE\" TEXT," + // 16: phone
                "\"REMARK\" TEXT," + // 17: remark
                "\"MEMBER_SHIP_CARD\" TEXT," + // 18: memberShipCard
                "\"BMP_STR\" TEXT," + // 19: bmpStr
                "\"HEAD_BMP_STR\" TEXT," + // 20: headBmpStr
                "\"IS_SELECTED\" INTEGER NOT NULL ," + // 21: isSelected
                "\"COMPANY\" TEXT," + // 22: company
                "\"SELFMOBILE\" TEXT," + // 23: selfmobile
                "\"CONTACT\" TEXT," + // 24: contact
                "\"CONTACTMOBILE\" TEXT," + // 25: contactmobile
                "\"RESIDENT\" TEXT," + // 26: resident
                "\"NATIONALITY\" TEXT," + // 27: nationality
                "\"NATIONALITYNAME\" TEXT," + // 28: nationalityname
                "\"BLOODRH\" TEXT," + // 29: bloodrh
                "\"EDUCATION\" TEXT," + // 30: education
                "\"CARRER\" TEXT," + // 31: carrer
                "\"MARRIAGE\" TEXT," + // 32: marriage
                "\"PAY_TYPE\" TEXT," + // 33: payType
                "\"PAY_TYPEOTHER\" TEXT," + // 34: payTypeother
                "\"ALLERGY\" TEXT," + // 35: allergy
                "\"ALLERGYNAME\" TEXT," + // 36: allergyname
                "\"EXPOSE\" TEXT," + // 37: expose
                "\"DISEASENAME\" TEXT," + // 38: diseasename
                "\"DISEASENAME2\" TEXT," + // 39: diseasename2
                "\"DISEASENAME3\" TEXT," + // 40: diseasename3
                "\"DISEASE\" TEXT," + // 41: disease
                "\"DISEASE_TIME\" INTEGER," + // 42: disease_time
                "\"DISEASE2\" TEXT," + // 43: disease2
                "\"DISEASE_TIME2\" INTEGER," + // 44: disease_time2
                "\"DISEASE3\" TEXT," + // 45: disease3
                "\"DISEASE_TIME3\" INTEGER," + // 46: disease_time3
                "\"DISEASE4\" TEXT," + // 47: disease4
                "\"DISEASE_TIME4\" INTEGER," + // 48: disease_time4
                "\"DISEASE5\" TEXT," + // 49: disease5
                "\"DISEASE_TIME5\" INTEGER," + // 50: disease_time5
                "\"DISEASE6\" TEXT," + // 51: disease6
                "\"DISEASE_TIME6\" INTEGER," + // 52: disease_time6
                "\"OPERATION\" TEXT," + // 53: operation
                "\"OPERATIONNAME\" TEXT," + // 54: operationname
                "\"OPERATION_TIME\" INTEGER," + // 55: operation_time
                "\"OPERATION2\" TEXT," + // 56: operation2
                "\"OPERATIONNAME2\" TEXT," + // 57: operationname2
                "\"OPERATION_TIME2\" INTEGER," + // 58: operation_time2
                "\"TRAUMA\" TEXT," + // 59: trauma
                "\"TRAUMANAME\" TEXT," + // 60: traumaname
                "\"TRAUMA_TIME\" INTEGER," + // 61: trauma_time
                "\"TRAUMA2\" TEXT," + // 62: trauma2
                "\"TRAUMANAME2\" TEXT," + // 63: traumaname2
                "\"TRAUMA_TIME2\" INTEGER," + // 64: trauma_time2
                "\"TRANSFUSATION\" TEXT," + // 65: transfusation
                "\"TRANSFUSATIONNAME\" TEXT," + // 66: transfusationname
                "\"TRANSFUSATION_TIME\" INTEGER," + // 67: transfusation_time
                "\"TRANSFUSATION2\" TEXT," + // 68: transfusation2
                "\"TRANSFUSATIONNAME2\" TEXT," + // 69: transfusationname2
                "\"TRANSFUSATION_TIME2\" INTEGER," + // 70: transfusation_time2
                "\"HOMEOTHER\" TEXT," + // 71: homeother
                "\"FATHER_DIS\" TEXT," + // 72: father_dis
                "\"FATHER_DIS_OTHER\" TEXT," + // 73: father_dis_other
                "\"MOTHER_DIS\" TEXT," + // 74: mother_dis
                "\"MOTHER_DIS_OTHER\" TEXT," + // 75: mother_dis_other
                "\"BROTHER_DIS\" TEXT," + // 76: brother_dis
                "\"BROTHER_DIS_OTHER\" TEXT," + // 77: brother_dis_other
                "\"CHILD_DIS\" TEXT," + // 78: child_dis
                "\"CHILD_DIS_OTHER\" TEXT," + // 79: child_dis_other
                "\"INHERITED\" TEXT," + // 80: inherited
                "\"INHERITEDNAME\" TEXT," + // 81: inheritedname
                "\"DISABILITY\" TEXT," + // 82: disability
                "\"DISABILITYNAME\" TEXT," + // 83: disabilityname
                "\"KITCHEN_EN\" TEXT," + // 84: kitchen_en
                "\"FUEL_EN\" TEXT," + // 85: fuel_en
                "\"WATER_EN\" TEXT," + // 86: water_en
                "\"TOILET_EN\" TEXT," + // 87: toilet_en
                "\"LIVESTOCK_EN\" TEXT," + // 88: livestock_en
                "\"IS_UPDATA\" INTEGER NOT NULL ," + // 89: isUpdata
                "\"UPDATA_TO_SX\" INTEGER NOT NULL ," + // 90: updataToSX
                "\"PATIENT_TYPE\" INTEGER NOT NULL ," + // 91: patient_type
                "\"SORT_DATE\" INTEGER," + // 92: sortDate
                "\"UPLOAD_FLAG\" TEXT," + // 93: uploadFlag
                "\"DOWNLOAD_FLAG\" TEXT," + // 94: downloadFlag
                "\"UPLOAD_RESULT\" TEXT," + // 95: uploadResult
                "\"DOWNLOAD_RESULT\" TEXT);"); // 96: downloadResult
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"PATIENT_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, PatientBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
 
        String num = entity.getNum();
        if (num != null) {
            stmt.bindString(3, num);
        }
 
        String idCard = entity.getIdCard();
        if (idCard != null) {
            stmt.bindString(4, idCard);
        }
 
        String card = entity.getCard();
        if (card != null) {
            stmt.bindString(5, card);
        }
 
        String idByServer = entity.getIdByServer();
        if (idByServer != null) {
            stmt.bindString(6, idByServer);
        }
 
        String orgId = entity.getOrgId();
        if (orgId != null) {
            stmt.bindString(7, orgId);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(8, address);
        }
 
        String waist = entity.getWaist();
        if (waist != null) {
            stmt.bindString(9, waist);
        }
 
        String hipline = entity.getHipline();
        if (hipline != null) {
            stmt.bindString(10, hipline);
        }
        stmt.bindLong(11, entity.getSex());
        stmt.bindLong(12, entity.getAge());
        stmt.bindLong(13, entity.getBlood());
        stmt.bindDouble(14, entity.getHeight());
        stmt.bindDouble(15, entity.getWeight());
 
        java.util.Date birthday = entity.getBirthday();
        if (birthday != null) {
            stmt.bindLong(16, birthday.getTime());
        }
 
        String phone = entity.getPhone();
        if (phone != null) {
            stmt.bindString(17, phone);
        }
 
        String remark = entity.getRemark();
        if (remark != null) {
            stmt.bindString(18, remark);
        }
 
        String memberShipCard = entity.getMemberShipCard();
        if (memberShipCard != null) {
            stmt.bindString(19, memberShipCard);
        }
 
        String bmpStr = entity.getBmpStr();
        if (bmpStr != null) {
            stmt.bindString(20, bmpStr);
        }
 
        String headBmpStr = entity.getHeadBmpStr();
        if (headBmpStr != null) {
            stmt.bindString(21, headBmpStr);
        }
        stmt.bindLong(22, entity.getIsSelected() ? 1L: 0L);
 
        String company = entity.getCompany();
        if (company != null) {
            stmt.bindString(23, company);
        }
 
        String selfmobile = entity.getSelfmobile();
        if (selfmobile != null) {
            stmt.bindString(24, selfmobile);
        }
 
        String contact = entity.getContact();
        if (contact != null) {
            stmt.bindString(25, contact);
        }
 
        String contactmobile = entity.getContactmobile();
        if (contactmobile != null) {
            stmt.bindString(26, contactmobile);
        }
 
        String resident = entity.getResident();
        if (resident != null) {
            stmt.bindString(27, resident);
        }
 
        String nationality = entity.getNationality();
        if (nationality != null) {
            stmt.bindString(28, nationality);
        }
 
        String nationalityname = entity.getNationalityname();
        if (nationalityname != null) {
            stmt.bindString(29, nationalityname);
        }
 
        String bloodrh = entity.getBloodrh();
        if (bloodrh != null) {
            stmt.bindString(30, bloodrh);
        }
 
        String education = entity.getEducation();
        if (education != null) {
            stmt.bindString(31, education);
        }
 
        String carrer = entity.getCarrer();
        if (carrer != null) {
            stmt.bindString(32, carrer);
        }
 
        String marriage = entity.getMarriage();
        if (marriage != null) {
            stmt.bindString(33, marriage);
        }
 
        String payType = entity.getPayType();
        if (payType != null) {
            stmt.bindString(34, payType);
        }
 
        String payTypeother = entity.getPayTypeother();
        if (payTypeother != null) {
            stmt.bindString(35, payTypeother);
        }
 
        String allergy = entity.getAllergy();
        if (allergy != null) {
            stmt.bindString(36, allergy);
        }
 
        String allergyname = entity.getAllergyname();
        if (allergyname != null) {
            stmt.bindString(37, allergyname);
        }
 
        String expose = entity.getExpose();
        if (expose != null) {
            stmt.bindString(38, expose);
        }
 
        String diseasename = entity.getDiseasename();
        if (diseasename != null) {
            stmt.bindString(39, diseasename);
        }
 
        String diseasename2 = entity.getDiseasename2();
        if (diseasename2 != null) {
            stmt.bindString(40, diseasename2);
        }
 
        String diseasename3 = entity.getDiseasename3();
        if (diseasename3 != null) {
            stmt.bindString(41, diseasename3);
        }
 
        String disease = entity.getDisease();
        if (disease != null) {
            stmt.bindString(42, disease);
        }
 
        java.util.Date disease_time = entity.getDisease_time();
        if (disease_time != null) {
            stmt.bindLong(43, disease_time.getTime());
        }
 
        String disease2 = entity.getDisease2();
        if (disease2 != null) {
            stmt.bindString(44, disease2);
        }
 
        java.util.Date disease_time2 = entity.getDisease_time2();
        if (disease_time2 != null) {
            stmt.bindLong(45, disease_time2.getTime());
        }
 
        String disease3 = entity.getDisease3();
        if (disease3 != null) {
            stmt.bindString(46, disease3);
        }
 
        java.util.Date disease_time3 = entity.getDisease_time3();
        if (disease_time3 != null) {
            stmt.bindLong(47, disease_time3.getTime());
        }
 
        String disease4 = entity.getDisease4();
        if (disease4 != null) {
            stmt.bindString(48, disease4);
        }
 
        java.util.Date disease_time4 = entity.getDisease_time4();
        if (disease_time4 != null) {
            stmt.bindLong(49, disease_time4.getTime());
        }
 
        String disease5 = entity.getDisease5();
        if (disease5 != null) {
            stmt.bindString(50, disease5);
        }
 
        java.util.Date disease_time5 = entity.getDisease_time5();
        if (disease_time5 != null) {
            stmt.bindLong(51, disease_time5.getTime());
        }
 
        String disease6 = entity.getDisease6();
        if (disease6 != null) {
            stmt.bindString(52, disease6);
        }
 
        java.util.Date disease_time6 = entity.getDisease_time6();
        if (disease_time6 != null) {
            stmt.bindLong(53, disease_time6.getTime());
        }
 
        String operation = entity.getOperation();
        if (operation != null) {
            stmt.bindString(54, operation);
        }
 
        String operationname = entity.getOperationname();
        if (operationname != null) {
            stmt.bindString(55, operationname);
        }
 
        java.util.Date operation_time = entity.getOperation_time();
        if (operation_time != null) {
            stmt.bindLong(56, operation_time.getTime());
        }
 
        String operation2 = entity.getOperation2();
        if (operation2 != null) {
            stmt.bindString(57, operation2);
        }
 
        String operationname2 = entity.getOperationname2();
        if (operationname2 != null) {
            stmt.bindString(58, operationname2);
        }
 
        java.util.Date operation_time2 = entity.getOperation_time2();
        if (operation_time2 != null) {
            stmt.bindLong(59, operation_time2.getTime());
        }
 
        String trauma = entity.getTrauma();
        if (trauma != null) {
            stmt.bindString(60, trauma);
        }
 
        String traumaname = entity.getTraumaname();
        if (traumaname != null) {
            stmt.bindString(61, traumaname);
        }
 
        java.util.Date trauma_time = entity.getTrauma_time();
        if (trauma_time != null) {
            stmt.bindLong(62, trauma_time.getTime());
        }
 
        String trauma2 = entity.getTrauma2();
        if (trauma2 != null) {
            stmt.bindString(63, trauma2);
        }
 
        String traumaname2 = entity.getTraumaname2();
        if (traumaname2 != null) {
            stmt.bindString(64, traumaname2);
        }
 
        java.util.Date trauma_time2 = entity.getTrauma_time2();
        if (trauma_time2 != null) {
            stmt.bindLong(65, trauma_time2.getTime());
        }
 
        String transfusation = entity.getTransfusation();
        if (transfusation != null) {
            stmt.bindString(66, transfusation);
        }
 
        String transfusationname = entity.getTransfusationname();
        if (transfusationname != null) {
            stmt.bindString(67, transfusationname);
        }
 
        java.util.Date transfusation_time = entity.getTransfusation_time();
        if (transfusation_time != null) {
            stmt.bindLong(68, transfusation_time.getTime());
        }
 
        String transfusation2 = entity.getTransfusation2();
        if (transfusation2 != null) {
            stmt.bindString(69, transfusation2);
        }
 
        String transfusationname2 = entity.getTransfusationname2();
        if (transfusationname2 != null) {
            stmt.bindString(70, transfusationname2);
        }
 
        java.util.Date transfusation_time2 = entity.getTransfusation_time2();
        if (transfusation_time2 != null) {
            stmt.bindLong(71, transfusation_time2.getTime());
        }
 
        String homeother = entity.getHomeother();
        if (homeother != null) {
            stmt.bindString(72, homeother);
        }
 
        String father_dis = entity.getFather_dis();
        if (father_dis != null) {
            stmt.bindString(73, father_dis);
        }
 
        String father_dis_other = entity.getFather_dis_other();
        if (father_dis_other != null) {
            stmt.bindString(74, father_dis_other);
        }
 
        String mother_dis = entity.getMother_dis();
        if (mother_dis != null) {
            stmt.bindString(75, mother_dis);
        }
 
        String mother_dis_other = entity.getMother_dis_other();
        if (mother_dis_other != null) {
            stmt.bindString(76, mother_dis_other);
        }
 
        String brother_dis = entity.getBrother_dis();
        if (brother_dis != null) {
            stmt.bindString(77, brother_dis);
        }
 
        String brother_dis_other = entity.getBrother_dis_other();
        if (brother_dis_other != null) {
            stmt.bindString(78, brother_dis_other);
        }
 
        String child_dis = entity.getChild_dis();
        if (child_dis != null) {
            stmt.bindString(79, child_dis);
        }
 
        String child_dis_other = entity.getChild_dis_other();
        if (child_dis_other != null) {
            stmt.bindString(80, child_dis_other);
        }
 
        String inherited = entity.getInherited();
        if (inherited != null) {
            stmt.bindString(81, inherited);
        }
 
        String inheritedname = entity.getInheritedname();
        if (inheritedname != null) {
            stmt.bindString(82, inheritedname);
        }
 
        String disability = entity.getDisability();
        if (disability != null) {
            stmt.bindString(83, disability);
        }
 
        String disabilityname = entity.getDisabilityname();
        if (disabilityname != null) {
            stmt.bindString(84, disabilityname);
        }
 
        String kitchen_en = entity.getKitchen_en();
        if (kitchen_en != null) {
            stmt.bindString(85, kitchen_en);
        }
 
        String fuel_en = entity.getFuel_en();
        if (fuel_en != null) {
            stmt.bindString(86, fuel_en);
        }
 
        String water_en = entity.getWater_en();
        if (water_en != null) {
            stmt.bindString(87, water_en);
        }
 
        String toilet_en = entity.getToilet_en();
        if (toilet_en != null) {
            stmt.bindString(88, toilet_en);
        }
 
        String livestock_en = entity.getLivestock_en();
        if (livestock_en != null) {
            stmt.bindString(89, livestock_en);
        }
        stmt.bindLong(90, entity.getIsUpdata() ? 1L: 0L);
        stmt.bindLong(91, entity.getUpdataToSX() ? 1L: 0L);
        stmt.bindLong(92, entity.getPatient_type());
 
        java.util.Date sortDate = entity.getSortDate();
        if (sortDate != null) {
            stmt.bindLong(93, sortDate.getTime());
        }
 
        String uploadFlag = entity.getUploadFlag();
        if (uploadFlag != null) {
            stmt.bindString(94, uploadFlag);
        }
 
        String downloadFlag = entity.getDownloadFlag();
        if (downloadFlag != null) {
            stmt.bindString(95, downloadFlag);
        }
 
        String uploadResult = entity.getUploadResult();
        if (uploadResult != null) {
            stmt.bindString(96, uploadResult);
        }
 
        String downloadResult = entity.getDownloadResult();
        if (downloadResult != null) {
            stmt.bindString(97, downloadResult);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, PatientBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
 
        String num = entity.getNum();
        if (num != null) {
            stmt.bindString(3, num);
        }
 
        String idCard = entity.getIdCard();
        if (idCard != null) {
            stmt.bindString(4, idCard);
        }
 
        String card = entity.getCard();
        if (card != null) {
            stmt.bindString(5, card);
        }
 
        String idByServer = entity.getIdByServer();
        if (idByServer != null) {
            stmt.bindString(6, idByServer);
        }
 
        String orgId = entity.getOrgId();
        if (orgId != null) {
            stmt.bindString(7, orgId);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(8, address);
        }
 
        String waist = entity.getWaist();
        if (waist != null) {
            stmt.bindString(9, waist);
        }
 
        String hipline = entity.getHipline();
        if (hipline != null) {
            stmt.bindString(10, hipline);
        }
        stmt.bindLong(11, entity.getSex());
        stmt.bindLong(12, entity.getAge());
        stmt.bindLong(13, entity.getBlood());
        stmt.bindDouble(14, entity.getHeight());
        stmt.bindDouble(15, entity.getWeight());
 
        java.util.Date birthday = entity.getBirthday();
        if (birthday != null) {
            stmt.bindLong(16, birthday.getTime());
        }
 
        String phone = entity.getPhone();
        if (phone != null) {
            stmt.bindString(17, phone);
        }
 
        String remark = entity.getRemark();
        if (remark != null) {
            stmt.bindString(18, remark);
        }
 
        String memberShipCard = entity.getMemberShipCard();
        if (memberShipCard != null) {
            stmt.bindString(19, memberShipCard);
        }
 
        String bmpStr = entity.getBmpStr();
        if (bmpStr != null) {
            stmt.bindString(20, bmpStr);
        }
 
        String headBmpStr = entity.getHeadBmpStr();
        if (headBmpStr != null) {
            stmt.bindString(21, headBmpStr);
        }
        stmt.bindLong(22, entity.getIsSelected() ? 1L: 0L);
 
        String company = entity.getCompany();
        if (company != null) {
            stmt.bindString(23, company);
        }
 
        String selfmobile = entity.getSelfmobile();
        if (selfmobile != null) {
            stmt.bindString(24, selfmobile);
        }
 
        String contact = entity.getContact();
        if (contact != null) {
            stmt.bindString(25, contact);
        }
 
        String contactmobile = entity.getContactmobile();
        if (contactmobile != null) {
            stmt.bindString(26, contactmobile);
        }
 
        String resident = entity.getResident();
        if (resident != null) {
            stmt.bindString(27, resident);
        }
 
        String nationality = entity.getNationality();
        if (nationality != null) {
            stmt.bindString(28, nationality);
        }
 
        String nationalityname = entity.getNationalityname();
        if (nationalityname != null) {
            stmt.bindString(29, nationalityname);
        }
 
        String bloodrh = entity.getBloodrh();
        if (bloodrh != null) {
            stmt.bindString(30, bloodrh);
        }
 
        String education = entity.getEducation();
        if (education != null) {
            stmt.bindString(31, education);
        }
 
        String carrer = entity.getCarrer();
        if (carrer != null) {
            stmt.bindString(32, carrer);
        }
 
        String marriage = entity.getMarriage();
        if (marriage != null) {
            stmt.bindString(33, marriage);
        }
 
        String payType = entity.getPayType();
        if (payType != null) {
            stmt.bindString(34, payType);
        }
 
        String payTypeother = entity.getPayTypeother();
        if (payTypeother != null) {
            stmt.bindString(35, payTypeother);
        }
 
        String allergy = entity.getAllergy();
        if (allergy != null) {
            stmt.bindString(36, allergy);
        }
 
        String allergyname = entity.getAllergyname();
        if (allergyname != null) {
            stmt.bindString(37, allergyname);
        }
 
        String expose = entity.getExpose();
        if (expose != null) {
            stmt.bindString(38, expose);
        }
 
        String diseasename = entity.getDiseasename();
        if (diseasename != null) {
            stmt.bindString(39, diseasename);
        }
 
        String diseasename2 = entity.getDiseasename2();
        if (diseasename2 != null) {
            stmt.bindString(40, diseasename2);
        }
 
        String diseasename3 = entity.getDiseasename3();
        if (diseasename3 != null) {
            stmt.bindString(41, diseasename3);
        }
 
        String disease = entity.getDisease();
        if (disease != null) {
            stmt.bindString(42, disease);
        }
 
        java.util.Date disease_time = entity.getDisease_time();
        if (disease_time != null) {
            stmt.bindLong(43, disease_time.getTime());
        }
 
        String disease2 = entity.getDisease2();
        if (disease2 != null) {
            stmt.bindString(44, disease2);
        }
 
        java.util.Date disease_time2 = entity.getDisease_time2();
        if (disease_time2 != null) {
            stmt.bindLong(45, disease_time2.getTime());
        }
 
        String disease3 = entity.getDisease3();
        if (disease3 != null) {
            stmt.bindString(46, disease3);
        }
 
        java.util.Date disease_time3 = entity.getDisease_time3();
        if (disease_time3 != null) {
            stmt.bindLong(47, disease_time3.getTime());
        }
 
        String disease4 = entity.getDisease4();
        if (disease4 != null) {
            stmt.bindString(48, disease4);
        }
 
        java.util.Date disease_time4 = entity.getDisease_time4();
        if (disease_time4 != null) {
            stmt.bindLong(49, disease_time4.getTime());
        }
 
        String disease5 = entity.getDisease5();
        if (disease5 != null) {
            stmt.bindString(50, disease5);
        }
 
        java.util.Date disease_time5 = entity.getDisease_time5();
        if (disease_time5 != null) {
            stmt.bindLong(51, disease_time5.getTime());
        }
 
        String disease6 = entity.getDisease6();
        if (disease6 != null) {
            stmt.bindString(52, disease6);
        }
 
        java.util.Date disease_time6 = entity.getDisease_time6();
        if (disease_time6 != null) {
            stmt.bindLong(53, disease_time6.getTime());
        }
 
        String operation = entity.getOperation();
        if (operation != null) {
            stmt.bindString(54, operation);
        }
 
        String operationname = entity.getOperationname();
        if (operationname != null) {
            stmt.bindString(55, operationname);
        }
 
        java.util.Date operation_time = entity.getOperation_time();
        if (operation_time != null) {
            stmt.bindLong(56, operation_time.getTime());
        }
 
        String operation2 = entity.getOperation2();
        if (operation2 != null) {
            stmt.bindString(57, operation2);
        }
 
        String operationname2 = entity.getOperationname2();
        if (operationname2 != null) {
            stmt.bindString(58, operationname2);
        }
 
        java.util.Date operation_time2 = entity.getOperation_time2();
        if (operation_time2 != null) {
            stmt.bindLong(59, operation_time2.getTime());
        }
 
        String trauma = entity.getTrauma();
        if (trauma != null) {
            stmt.bindString(60, trauma);
        }
 
        String traumaname = entity.getTraumaname();
        if (traumaname != null) {
            stmt.bindString(61, traumaname);
        }
 
        java.util.Date trauma_time = entity.getTrauma_time();
        if (trauma_time != null) {
            stmt.bindLong(62, trauma_time.getTime());
        }
 
        String trauma2 = entity.getTrauma2();
        if (trauma2 != null) {
            stmt.bindString(63, trauma2);
        }
 
        String traumaname2 = entity.getTraumaname2();
        if (traumaname2 != null) {
            stmt.bindString(64, traumaname2);
        }
 
        java.util.Date trauma_time2 = entity.getTrauma_time2();
        if (trauma_time2 != null) {
            stmt.bindLong(65, trauma_time2.getTime());
        }
 
        String transfusation = entity.getTransfusation();
        if (transfusation != null) {
            stmt.bindString(66, transfusation);
        }
 
        String transfusationname = entity.getTransfusationname();
        if (transfusationname != null) {
            stmt.bindString(67, transfusationname);
        }
 
        java.util.Date transfusation_time = entity.getTransfusation_time();
        if (transfusation_time != null) {
            stmt.bindLong(68, transfusation_time.getTime());
        }
 
        String transfusation2 = entity.getTransfusation2();
        if (transfusation2 != null) {
            stmt.bindString(69, transfusation2);
        }
 
        String transfusationname2 = entity.getTransfusationname2();
        if (transfusationname2 != null) {
            stmt.bindString(70, transfusationname2);
        }
 
        java.util.Date transfusation_time2 = entity.getTransfusation_time2();
        if (transfusation_time2 != null) {
            stmt.bindLong(71, transfusation_time2.getTime());
        }
 
        String homeother = entity.getHomeother();
        if (homeother != null) {
            stmt.bindString(72, homeother);
        }
 
        String father_dis = entity.getFather_dis();
        if (father_dis != null) {
            stmt.bindString(73, father_dis);
        }
 
        String father_dis_other = entity.getFather_dis_other();
        if (father_dis_other != null) {
            stmt.bindString(74, father_dis_other);
        }
 
        String mother_dis = entity.getMother_dis();
        if (mother_dis != null) {
            stmt.bindString(75, mother_dis);
        }
 
        String mother_dis_other = entity.getMother_dis_other();
        if (mother_dis_other != null) {
            stmt.bindString(76, mother_dis_other);
        }
 
        String brother_dis = entity.getBrother_dis();
        if (brother_dis != null) {
            stmt.bindString(77, brother_dis);
        }
 
        String brother_dis_other = entity.getBrother_dis_other();
        if (brother_dis_other != null) {
            stmt.bindString(78, brother_dis_other);
        }
 
        String child_dis = entity.getChild_dis();
        if (child_dis != null) {
            stmt.bindString(79, child_dis);
        }
 
        String child_dis_other = entity.getChild_dis_other();
        if (child_dis_other != null) {
            stmt.bindString(80, child_dis_other);
        }
 
        String inherited = entity.getInherited();
        if (inherited != null) {
            stmt.bindString(81, inherited);
        }
 
        String inheritedname = entity.getInheritedname();
        if (inheritedname != null) {
            stmt.bindString(82, inheritedname);
        }
 
        String disability = entity.getDisability();
        if (disability != null) {
            stmt.bindString(83, disability);
        }
 
        String disabilityname = entity.getDisabilityname();
        if (disabilityname != null) {
            stmt.bindString(84, disabilityname);
        }
 
        String kitchen_en = entity.getKitchen_en();
        if (kitchen_en != null) {
            stmt.bindString(85, kitchen_en);
        }
 
        String fuel_en = entity.getFuel_en();
        if (fuel_en != null) {
            stmt.bindString(86, fuel_en);
        }
 
        String water_en = entity.getWater_en();
        if (water_en != null) {
            stmt.bindString(87, water_en);
        }
 
        String toilet_en = entity.getToilet_en();
        if (toilet_en != null) {
            stmt.bindString(88, toilet_en);
        }
 
        String livestock_en = entity.getLivestock_en();
        if (livestock_en != null) {
            stmt.bindString(89, livestock_en);
        }
        stmt.bindLong(90, entity.getIsUpdata() ? 1L: 0L);
        stmt.bindLong(91, entity.getUpdataToSX() ? 1L: 0L);
        stmt.bindLong(92, entity.getPatient_type());
 
        java.util.Date sortDate = entity.getSortDate();
        if (sortDate != null) {
            stmt.bindLong(93, sortDate.getTime());
        }
 
        String uploadFlag = entity.getUploadFlag();
        if (uploadFlag != null) {
            stmt.bindString(94, uploadFlag);
        }
 
        String downloadFlag = entity.getDownloadFlag();
        if (downloadFlag != null) {
            stmt.bindString(95, downloadFlag);
        }
 
        String uploadResult = entity.getUploadResult();
        if (uploadResult != null) {
            stmt.bindString(96, uploadResult);
        }
 
        String downloadResult = entity.getDownloadResult();
        if (downloadResult != null) {
            stmt.bindString(97, downloadResult);
        }
    }

    @Override
    protected final void attachEntity(PatientBean entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public PatientBean readEntity(Cursor cursor, int offset) {
        PatientBean entity = new PatientBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // name
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // num
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // idCard
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // card
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // idByServer
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // orgId
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // address
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // waist
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // hipline
            cursor.getInt(offset + 10), // sex
            cursor.getInt(offset + 11), // age
            cursor.getInt(offset + 12), // blood
            cursor.getFloat(offset + 13), // height
            cursor.getFloat(offset + 14), // weight
            cursor.isNull(offset + 15) ? null : new java.util.Date(cursor.getLong(offset + 15)), // birthday
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // phone
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // remark
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // memberShipCard
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // bmpStr
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // headBmpStr
            cursor.getShort(offset + 21) != 0, // isSelected
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // company
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // selfmobile
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // contact
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // contactmobile
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // resident
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // nationality
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // nationalityname
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // bloodrh
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // education
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // carrer
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // marriage
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // payType
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // payTypeother
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // allergy
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // allergyname
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // expose
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // diseasename
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // diseasename2
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // diseasename3
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // disease
            cursor.isNull(offset + 42) ? null : new java.util.Date(cursor.getLong(offset + 42)), // disease_time
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // disease2
            cursor.isNull(offset + 44) ? null : new java.util.Date(cursor.getLong(offset + 44)), // disease_time2
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // disease3
            cursor.isNull(offset + 46) ? null : new java.util.Date(cursor.getLong(offset + 46)), // disease_time3
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // disease4
            cursor.isNull(offset + 48) ? null : new java.util.Date(cursor.getLong(offset + 48)), // disease_time4
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // disease5
            cursor.isNull(offset + 50) ? null : new java.util.Date(cursor.getLong(offset + 50)), // disease_time5
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // disease6
            cursor.isNull(offset + 52) ? null : new java.util.Date(cursor.getLong(offset + 52)), // disease_time6
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // operation
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // operationname
            cursor.isNull(offset + 55) ? null : new java.util.Date(cursor.getLong(offset + 55)), // operation_time
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // operation2
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // operationname2
            cursor.isNull(offset + 58) ? null : new java.util.Date(cursor.getLong(offset + 58)), // operation_time2
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // trauma
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // traumaname
            cursor.isNull(offset + 61) ? null : new java.util.Date(cursor.getLong(offset + 61)), // trauma_time
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // trauma2
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // traumaname2
            cursor.isNull(offset + 64) ? null : new java.util.Date(cursor.getLong(offset + 64)), // trauma_time2
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // transfusation
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // transfusationname
            cursor.isNull(offset + 67) ? null : new java.util.Date(cursor.getLong(offset + 67)), // transfusation_time
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // transfusation2
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // transfusationname2
            cursor.isNull(offset + 70) ? null : new java.util.Date(cursor.getLong(offset + 70)), // transfusation_time2
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // homeother
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // father_dis
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // father_dis_other
            cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74), // mother_dis
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // mother_dis_other
            cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // brother_dis
            cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // brother_dis_other
            cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78), // child_dis
            cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79), // child_dis_other
            cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80), // inherited
            cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81), // inheritedname
            cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82), // disability
            cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83), // disabilityname
            cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84), // kitchen_en
            cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85), // fuel_en
            cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86), // water_en
            cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87), // toilet_en
            cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88), // livestock_en
            cursor.getShort(offset + 89) != 0, // isUpdata
            cursor.getShort(offset + 90) != 0, // updataToSX
            cursor.getInt(offset + 91), // patient_type
            cursor.isNull(offset + 92) ? null : new java.util.Date(cursor.getLong(offset + 92)), // sortDate
            cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93), // uploadFlag
            cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94), // downloadFlag
            cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95), // uploadResult
            cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96) // downloadResult
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, PatientBean entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setNum(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setIdCard(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setCard(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setIdByServer(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setOrgId(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setAddress(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setWaist(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setHipline(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setSex(cursor.getInt(offset + 10));
        entity.setAge(cursor.getInt(offset + 11));
        entity.setBlood(cursor.getInt(offset + 12));
        entity.setHeight(cursor.getFloat(offset + 13));
        entity.setWeight(cursor.getFloat(offset + 14));
        entity.setBirthday(cursor.isNull(offset + 15) ? null : new java.util.Date(cursor.getLong(offset + 15)));
        entity.setPhone(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setRemark(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setMemberShipCard(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setBmpStr(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setHeadBmpStr(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setIsSelected(cursor.getShort(offset + 21) != 0);
        entity.setCompany(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setSelfmobile(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setContact(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setContactmobile(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setResident(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setNationality(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setNationalityname(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setBloodrh(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setEducation(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setCarrer(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setMarriage(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setPayType(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setPayTypeother(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setAllergy(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setAllergyname(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setExpose(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setDiseasename(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setDiseasename2(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setDiseasename3(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setDisease(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setDisease_time(cursor.isNull(offset + 42) ? null : new java.util.Date(cursor.getLong(offset + 42)));
        entity.setDisease2(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setDisease_time2(cursor.isNull(offset + 44) ? null : new java.util.Date(cursor.getLong(offset + 44)));
        entity.setDisease3(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setDisease_time3(cursor.isNull(offset + 46) ? null : new java.util.Date(cursor.getLong(offset + 46)));
        entity.setDisease4(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setDisease_time4(cursor.isNull(offset + 48) ? null : new java.util.Date(cursor.getLong(offset + 48)));
        entity.setDisease5(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setDisease_time5(cursor.isNull(offset + 50) ? null : new java.util.Date(cursor.getLong(offset + 50)));
        entity.setDisease6(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setDisease_time6(cursor.isNull(offset + 52) ? null : new java.util.Date(cursor.getLong(offset + 52)));
        entity.setOperation(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setOperationname(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setOperation_time(cursor.isNull(offset + 55) ? null : new java.util.Date(cursor.getLong(offset + 55)));
        entity.setOperation2(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setOperationname2(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setOperation_time2(cursor.isNull(offset + 58) ? null : new java.util.Date(cursor.getLong(offset + 58)));
        entity.setTrauma(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setTraumaname(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setTrauma_time(cursor.isNull(offset + 61) ? null : new java.util.Date(cursor.getLong(offset + 61)));
        entity.setTrauma2(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setTraumaname2(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setTrauma_time2(cursor.isNull(offset + 64) ? null : new java.util.Date(cursor.getLong(offset + 64)));
        entity.setTransfusation(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setTransfusationname(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setTransfusation_time(cursor.isNull(offset + 67) ? null : new java.util.Date(cursor.getLong(offset + 67)));
        entity.setTransfusation2(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setTransfusationname2(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setTransfusation_time2(cursor.isNull(offset + 70) ? null : new java.util.Date(cursor.getLong(offset + 70)));
        entity.setHomeother(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setFather_dis(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setFather_dis_other(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setMother_dis(cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74));
        entity.setMother_dis_other(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setBrother_dis(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setBrother_dis_other(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setChild_dis(cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78));
        entity.setChild_dis_other(cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79));
        entity.setInherited(cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80));
        entity.setInheritedname(cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81));
        entity.setDisability(cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82));
        entity.setDisabilityname(cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83));
        entity.setKitchen_en(cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84));
        entity.setFuel_en(cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85));
        entity.setWater_en(cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86));
        entity.setToilet_en(cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87));
        entity.setLivestock_en(cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88));
        entity.setIsUpdata(cursor.getShort(offset + 89) != 0);
        entity.setUpdataToSX(cursor.getShort(offset + 90) != 0);
        entity.setPatient_type(cursor.getInt(offset + 91));
        entity.setSortDate(cursor.isNull(offset + 92) ? null : new java.util.Date(cursor.getLong(offset + 92)));
        entity.setUploadFlag(cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93));
        entity.setDownloadFlag(cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94));
        entity.setUploadResult(cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95));
        entity.setDownloadResult(cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(PatientBean entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(PatientBean entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(PatientBean entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
